//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.0

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "bill_tb")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub tag_id: i32,
    pub transaction_date: Date,
    #[sea_orm(column_type = "Text", nullable)]
    pub comment: Option<String>,
    pub created_time: DateTime,
    pub updated_time: DateTime,
    pub pay_method: String,
    pub user_id: i32,
    #[sea_orm(column_type = "Decimal(Some((12, 2)))", nullable)]
    pub pay: Option<Decimal>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::tag_tb::Entity",
        from = "Column::TagId",
        to = "super::tag_tb::Column::Id",
        on_update = "Restrict",
        on_delete = "Restrict"
    )]
    TagTb,
}

impl Related<super::tag_tb::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::TagTb.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
